from fischertechnik.controller.Motor import Motor
from lib.camera import *
from lib.controller import *
 
SP = None
error = None
error_pas = None
suma_error = None
Kp = None
Ki = None
Kd = None
Correcion = None
Velocidad = None
counter = None
 
 
def color_callback(event):
    global SP, error, error_pas, suma_error, Kp, Ki, Kd, Correcion, Velocidad, counter
    if event.value.compare(hex="#00ff00", hue_tolerance=20) == True:
        SP = -20
    elif event.value.compare(hex="#ff5300", hue_tolerance=20) == True:
        SP = 20
 
 
color_detector.add_detection_listener(color_callback)
 
 
SP = 0
error = 0
error_pas = 0
suma_error = 0
Kp = 2.3
Ki = 0
Kd = 30
Correcion = 0
Velocidad = 512
counter = 0
while True:
    error = SP - (TXT_M_I1_ultrasonic_distance_meter.get_distance() - TXT_M_I3_ultrasonic_distance_meter.get_distance())
    suma_error = (suma_error if isinstance(suma_error, (int, float)) else 0) + error
    Correcion = min(max(Kp * error + (Kd * (error - error_pas) + Ki * suma_error), -100), 100)
    TXT_M_S1_servomotor.set_position(int(256 + Correcion))
    TXT_M_M1_encodermotor.set_speed(int(Velocidad), Motor.CW)
    TXT_M_M1_encodermotor.start()
    error_pas = error
 
